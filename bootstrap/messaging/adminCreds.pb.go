// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messaging/adminCreds.proto

/*
Package messaging is a generated protocol buffer package.

It is generated from these files:
	messaging/adminCreds.proto

It has these top-level messages:
	AdminCredsRequest
	AdminCredsResponse
	JoinTokenRequest
	JoinTokenResponse
*/
package messaging

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_Unknown StatusCode = 0
	StatusCode_Ok      StatusCode = 1
	StatusCode_Failed  StatusCode = 2
)

var StatusCode_name = map[int32]string{
	0: "Unknown",
	1: "Ok",
	2: "Failed",
}
var StatusCode_value = map[string]int32{
	"Unknown": 0,
	"Ok":      1,
	"Failed":  2,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}
func (StatusCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AdminCredsRequest struct {
}

func (m *AdminCredsRequest) Reset()                    { *m = AdminCredsRequest{} }
func (m *AdminCredsRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminCredsRequest) ProtoMessage()               {}
func (*AdminCredsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AdminCredsResponse struct {
	StatusCode StatusCode `protobuf:"varint,1,opt,name=StatusCode,enum=messaging.StatusCode" json:"StatusCode,omitempty"`
	Message    string     `protobuf:"bytes,2,opt,name=Message" json:"Message,omitempty"`
	Content    []byte     `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *AdminCredsResponse) Reset()                    { *m = AdminCredsResponse{} }
func (m *AdminCredsResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminCredsResponse) ProtoMessage()               {}
func (*AdminCredsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AdminCredsResponse) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_Unknown
}

func (m *AdminCredsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AdminCredsResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type JoinTokenRequest struct {
}

func (m *JoinTokenRequest) Reset()                    { *m = JoinTokenRequest{} }
func (m *JoinTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*JoinTokenRequest) ProtoMessage()               {}
func (*JoinTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type JoinTokenResponse struct {
	JoinToken string `protobuf:"bytes,1,opt,name=JoinToken" json:"JoinToken,omitempty"`
}

func (m *JoinTokenResponse) Reset()                    { *m = JoinTokenResponse{} }
func (m *JoinTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*JoinTokenResponse) ProtoMessage()               {}
func (*JoinTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *JoinTokenResponse) GetJoinToken() string {
	if m != nil {
		return m.JoinToken
	}
	return ""
}

func init() {
	proto.RegisterType((*AdminCredsRequest)(nil), "messaging.AdminCredsRequest")
	proto.RegisterType((*AdminCredsResponse)(nil), "messaging.AdminCredsResponse")
	proto.RegisterType((*JoinTokenRequest)(nil), "messaging.JoinTokenRequest")
	proto.RegisterType((*JoinTokenResponse)(nil), "messaging.JoinTokenResponse")
	proto.RegisterEnum("messaging.StatusCode", StatusCode_name, StatusCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AdminCreds service

type AdminCredsClient interface {
	GetAdminCreds(ctx context.Context, in *AdminCredsRequest, opts ...grpc.CallOption) (*AdminCredsResponse, error)
	GetJoinToken(ctx context.Context, in *JoinTokenRequest, opts ...grpc.CallOption) (*JoinTokenResponse, error)
}

type adminCredsClient struct {
	cc *grpc.ClientConn
}

func NewAdminCredsClient(cc *grpc.ClientConn) AdminCredsClient {
	return &adminCredsClient{cc}
}

func (c *adminCredsClient) GetAdminCreds(ctx context.Context, in *AdminCredsRequest, opts ...grpc.CallOption) (*AdminCredsResponse, error) {
	out := new(AdminCredsResponse)
	err := grpc.Invoke(ctx, "/messaging.AdminCreds/GetAdminCreds", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminCredsClient) GetJoinToken(ctx context.Context, in *JoinTokenRequest, opts ...grpc.CallOption) (*JoinTokenResponse, error) {
	out := new(JoinTokenResponse)
	err := grpc.Invoke(ctx, "/messaging.AdminCreds/GetJoinToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AdminCreds service

type AdminCredsServer interface {
	GetAdminCreds(context.Context, *AdminCredsRequest) (*AdminCredsResponse, error)
	GetJoinToken(context.Context, *JoinTokenRequest) (*JoinTokenResponse, error)
}

func RegisterAdminCredsServer(s *grpc.Server, srv AdminCredsServer) {
	s.RegisterService(&_AdminCreds_serviceDesc, srv)
}

func _AdminCreds_GetAdminCreds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminCredsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCredsServer).GetAdminCreds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messaging.AdminCreds/GetAdminCreds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCredsServer).GetAdminCreds(ctx, req.(*AdminCredsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminCreds_GetJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminCredsServer).GetJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messaging.AdminCreds/GetJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminCredsServer).GetJoinToken(ctx, req.(*JoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminCreds_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messaging.AdminCreds",
	HandlerType: (*AdminCredsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAdminCreds",
			Handler:    _AdminCreds_GetAdminCreds_Handler,
		},
		{
			MethodName: "GetJoinToken",
			Handler:    _AdminCreds_GetJoinToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messaging/adminCreds.proto",
}

func init() { proto.RegisterFile("messaging/adminCreds.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xdd, 0x4a, 0xc3, 0x40,
	0x10, 0x85, 0xbb, 0x11, 0x52, 0x32, 0x56, 0x49, 0x47, 0x84, 0x10, 0x23, 0x84, 0x5c, 0x05, 0xc1,
	0x88, 0x15, 0x1f, 0x40, 0x02, 0x16, 0x14, 0x15, 0x56, 0x7d, 0x80, 0x48, 0x86, 0x12, 0x62, 0x67,
	0x6b, 0x77, 0x8b, 0x97, 0x3e, 0x8f, 0x6f, 0x29, 0x46, 0xb3, 0x59, 0xfc, 0xb9, 0x9c, 0xf3, 0x4d,
	0x86, 0xef, 0x64, 0x21, 0x5e, 0x92, 0xd6, 0xd5, 0xa2, 0xe1, 0xc5, 0x49, 0x55, 0x2f, 0x1b, 0x2e,
	0xd7, 0x54, 0xeb, 0x62, 0xb5, 0x56, 0x46, 0x61, 0x60, 0x59, 0xb6, 0x07, 0xd3, 0x0b, 0x8b, 0x25,
	0xbd, 0x6c, 0x48, 0x9b, 0xec, 0x0d, 0xd0, 0x0d, 0xf5, 0x4a, 0xb1, 0x26, 0x3c, 0x07, 0xb8, 0x37,
	0x95, 0xd9, 0xe8, 0x52, 0xd5, 0x14, 0x89, 0x54, 0xe4, 0xbb, 0xb3, 0xfd, 0xc2, 0x9e, 0x2a, 0x06,
	0x28, 0x9d, 0x45, 0x8c, 0x60, 0x7c, 0xd3, 0xed, 0x50, 0xe4, 0xa5, 0x22, 0x0f, 0x64, 0x3f, 0x7e,
	0x92, 0x52, 0xb1, 0x21, 0x36, 0xd1, 0x56, 0x2a, 0xf2, 0x89, 0xec, 0xc7, 0x0c, 0x21, 0xbc, 0x52,
	0x0d, 0x3f, 0xa8, 0x96, 0xb8, 0x97, 0x3a, 0x85, 0xa9, 0x93, 0x7d, 0x3b, 0x25, 0x10, 0xd8, 0xb0,
	0x53, 0x0a, 0xe4, 0x10, 0x1c, 0x1d, 0xbb, 0xc6, 0xb8, 0x0d, 0xe3, 0x47, 0x6e, 0x59, 0xbd, 0x72,
	0x38, 0x42, 0x1f, 0xbc, 0xbb, 0x36, 0x14, 0x08, 0xe0, 0x5f, 0x56, 0xcd, 0x33, 0xd5, 0xa1, 0x37,
	0x7b, 0x17, 0x00, 0x43, 0x6f, 0xbc, 0x85, 0x9d, 0x39, 0x19, 0x27, 0x48, 0x9c, 0xb2, 0xbf, 0x7e,
	0x5a, 0x7c, 0xf8, 0x0f, 0xfd, 0x32, 0xcd, 0x46, 0x78, 0x0d, 0x93, 0x39, 0x19, 0x6b, 0x87, 0x07,
	0xce, 0x07, 0x3f, 0xdb, 0xc6, 0xc9, 0xdf, 0xb0, 0x3f, 0xf6, 0xe4, 0x77, 0x2f, 0x79, 0xf6, 0x11,
	0x00, 0x00, 0xff, 0xff, 0x74, 0x57, 0xd9, 0xa1, 0xe7, 0x01, 0x00, 0x00,
}
